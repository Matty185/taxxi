-- Drop existing tables if they exist
DROP TABLE IF EXISTS panic_alerts CASCADE;
DROP TABLE IF EXISTS rides CASCADE;
DROP TABLE IF EXISTS users CASCADE;

-- Create users table
CREATE TABLE users (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    email CHARACTER VARYING(255) NOT NULL,
    password_hash CHARACTER VARYING(255) NOT NULL,
    name CHARACTER VARYING(255) NOT NULL,
    phone CHARACTER VARYING(20) NOT NULL,
    role CHARACTER VARYING(20) NOT NULL,
    id_verified BOOLEAN DEFAULT false,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

-- Create rides table
CREATE TABLE rides (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    user_id INTEGER NOT NULL,
    driver_id INTEGER,
    pickup_location CHARACTER VARYING(255) NOT NULL,
    dropoff_location CHARACTER VARYING(255) NOT NULL,
    pickup_coordinates POINT NOT NULL,
    dropoff_coordinates POINT NOT NULL,
    status CHARACTER VARYING(20) DEFAULT 'pending',
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    completed_at TIMESTAMP WITH TIME ZONE,
    rating INTEGER,
    review TEXT,
    passenger_count INTEGER DEFAULT 1,
    ride_type INTEGER DEFAULT 1,
    accepted_at TIMESTAMP WITH TIME ZONE
);

-- Create panic_alerts table
CREATE TABLE panic_alerts (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    ride_id INTEGER NOT NULL,
    user_id INTEGER NOT NULL,
    driver_id INTEGER NOT NULL,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    resolved_at TIMESTAMP WITH TIME ZONE,
    resolved_by INTEGER,
    notes TEXT,
    emergency_email TEXT NOT NULL
);

-- Add indexes
CREATE INDEX users_email_key ON users USING btree (email);
CREATE INDEX rides_status_idx ON rides USING btree (status);
CREATE INDEX rides_user_id_idx ON rides USING btree (user_id);
CREATE INDEX panic_alerts_pkey ON panic_alerts USING btree (id);

-- Add foreign key constraints
ALTER TABLE rides
    ADD CONSTRAINT rides_driver_id_fkey FOREIGN KEY (driver_id) REFERENCES users(id),
    ADD CONSTRAINT rides_user_id_fkey FOREIGN KEY (user_id) REFERENCES users(id);

ALTER TABLE panic_alerts
    ADD CONSTRAINT fk_ride FOREIGN KEY (ride_id) REFERENCES rides(id),
    ADD CONSTRAINT panic_alerts_driver_id_fkey FOREIGN KEY (driver_id) REFERENCES users(id),
    ADD CONSTRAINT panic_alerts_resolved_by_fkey FOREIGN KEY (resolved_by) REFERENCES users(id),
    ADD CONSTRAINT panic_alerts_user_id_fkey FOREIGN KEY (user_id) REFERENCES users(id);

-- Add check constraints
ALTER TABLE rides
    ADD CONSTRAINT rides_rating_check CHECK (rating >= 1 AND rating < 5);

-- Create unique constraints
ALTER TABLE users
    ADD CONSTRAINT users_email_key UNIQUE (email);

-- Create index on user role and availability for faster queries
CREATE INDEX IF NOT EXISTS idx_users_role_availability ON users(role, is_available); 